stable_task:
  container:
    image: rust:latest
  cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cargo update && cat Cargo.lock
  env:
    matrix:
      - CRATE: oxide-auth
      - CRATE: oxide-auth-async
      - CRATE: oxide-auth-actix
      - CRATE: actix-example
      - CRATE: oxide-auth-iron
      - CRATE: oxide-auth-rouille
      - CRATE: oxide-auth-db
        OXIDE_AUTH_SKIP_REDIS: yes
      - CRATE: db-example
  build_script: cargo build -p "$CRATE" --examples --all-features
  test_script: cargo test -p "$CRATE" --all-features
  before_cache_script: rm -rf $CARGO_HOME/registry/index

nightly_task:
  container:
    image: rustlang/rust:nightly
  cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cargo update && cat Cargo.lock
  env:
    matrix:
      - CRATE: oxide-auth
      - CRATE: oxide-auth-async
      - CRATE: oxide-auth-actix
      - CRATE: actix-example
      - CRATE: oxide-auth-iron
      - CRATE: oxide-auth-rouille
      - CRATE: oxide-auth-rocket
      - CRATE: oxide-auth-db
        OXIDE_AUTH_SKIP_REDIS: yes
      - CRATE: db-example
  build_script: cargo build -p "$CRATE" --examples --all-features
  test_script: cargo test -p "$CRATE" --all-features
  before_cache_script: rm -rf $CARGO_HOME/registry/index

release_task:
  only_if: $CIRRUS_BRANCH =~ 'release.*'
  container:
    image: rust:latest
  script: ./release

doc_task:
  container:
    image: rustlang/rust:nightly
  script: cargo doc --no-deps --document-private-items --all-features
